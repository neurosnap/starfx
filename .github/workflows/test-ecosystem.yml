name: test-ecosystem

on:
  push:
    branches: main
  pull_request:
    branches: main

permissions:
  contents: read

jobs:
  test-ecosystem:
    name: ${{ matrix.example.repo }}/${{ matrix.example.folder }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        example:
          - owner: neurosnap
            repo: starfx-examples
            folder: vite-react
          - owner: neurosnap
            repo: starfx-examples
            folder: parcel-react

    steps:
      - name: checkout main repo
        uses: actions/checkout@v4
        with:
          repository: "neurosnap/starfx"
          path: "starfx"

      - name: setup deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - id: conditionalBranch
        run: deno run -A ./.scripts/branch-exists.ts >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: checkout ${{ matrix.example.owner }}/${{ matrix.example.repo }}
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.example.owner }}/${{ matrix.example.repo }}
          path: ${{ matrix.example.repo }}
          ref: ${{ steps.conditionalBranch.branch }}

      - name: npm
        run: deno task npm 0.0.0
        working-directory: starfx

      # install in example repos
      - name: install ${{ matrix.example.owner }}/${{ matrix.example.repo }}
        working-directory: ${{ matrix.example.repo }}/${{ matrix.example.folder }}
        run: npm install

      # symlink example repos
      - name: symlink built assets
        run: deno task sync-build-to install ${{ matrix.example.repo }}/${{ matrix.example.folder }}
        working-directory: starfx

      # run build and test in example repos
      - name: build ${{ matrix.example.owner }}/${{ matrix.example.repo }}
        working-directory: ${{ matrix.example.repo }}/${{ matrix.example.folder }}
        run: npm run build
